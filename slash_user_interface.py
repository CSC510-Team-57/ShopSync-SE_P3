"""
Copyright (c) 2021 Anshul Patel
This code is licensed under MIT license (see LICENSE.MD for details)

@author: slash
"""

# Import Libraries
import streamlit.components.v1 as components
import streamlit
import re
import pandas as pd
import src.configs as conf
from src.url_shortener import shorten_url
from src.main_streamlit import search_items_API, rakuten
import streamlit as st
import sys
sys.path.append('../')

navbar = """
<style>
.navbar {
  background-color: black;
  padding: 20px;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}


.navbar a {
  color: white !important;
  padding: 14px 16px;
  text-decoration: none;
  font-size: 18px;
}

.navbar a:hover {
  background-color: #ddd;
  color: black;
}
</style>
"""


def split_description(description):
    words = description.split()
    lines = []
    line = ""
    for word in words:
        if len(line) + len(word) + 1 <= 6:
            if line:
                line += " "
            line += word
        else:
            lines.append(line)
            line = word
    if line:
        lines.append(line)
    return '\n'.join(lines)
    '''words = description.split()
    lines = [' '.join(words[i:i+6]) for i in range(0, len(words), 6)]
    return '\n'.join(lines)'''


st.markdown(navbar, unsafe_allow_html=True)

# Title for the application
title = """
<div class="header">
    <div class="t">SHOPSYNC</div>
    <p>Discover unparalleled savings effortlessly.</p>
</div>
<style>
        .appview-container{
            background-color: #efefef !important;
        }
        
        header{
            background-color: #efefef !important;
        }

        .footer {
            background-color: #efefef !important;
        }

        .st-emotion-cache-1y4p8pa{
            margin-top: -24px !important;
            margin-bottom: -24px !important;
        }
        .centered-svg{
            margin-top: -48px !important;
        }

        .header {
            background-color: #6c63ff;
            padding: 10px;
            text-align: center;
            border-radius: 12px;
            color: #efefef;
            margin-top: -24px;
        }

        .t {
            font-size: 48px;
            margin: 0;  /* Remove default margin for the <h1> element */
            font-weight: bold;
        }

        .header p {
            font-size: 18px;
        }

        .site-title {
            font-size: 24px;
            margin: 10px 0;  /* Add some margin to separate the title from the main heading */
            text-transform: uppercase; /* Uppercase the text */
        }
    </style>
"""

st.markdown(title, unsafe_allow_html=True)

# Display SVG Image
svg_code = """
<svg width="987" height="460" viewBox="0 0 987 460" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M95.4434 60.7414C92.2615 54.0491 90.909 46.53 93.4388 39.1885C100.728 18.0359 129.467 30.8194 132.389 43.2641C135.311 55.7089 127.222 83.1226 119.156 83.0457C115.94 83.0151 110.039 79.398 104.57 73.7182L100.902 103.783L76.7257 97.3045L95.4434 60.7414Z" fill="#D4A181"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M104.217 61.4676C99.6772 66.419 94.3695 69.6416 90.2271 68.5317C82.3589 66.4234 79.5831 54.4048 82.6137 43.0944C82.7202 42.697 82.8338 42.3044 82.9544 41.9168C73.1008 45.3981 63.6696 54.9375 52.6567 51.9866C37.6737 47.9719 39.821 16.1567 60.7544 21.7658C74.9906 25.5804 81.4372 29.5324 86.6497 34.2189C88.7392 31.1822 91.3101 28.8473 94.0574 27.4718C94.7524 27.0138 95.7251 26.6581 96.9239 26.4079C97.6642 26.2277 98.4094 26.119 99.1541 26.0865C103.152 25.7242 108.677 26.1934 114.62 27.5656C115.73 27.8219 116.813 28.1 117.863 28.3965C119.367 22.8522 125.074 19.566 130.627 21.0539C136.191 22.5446 139.492 28.2632 138.002 33.8267C136.56 39.2071 131.164 42.472 125.778 41.3327C122.49 41.4561 118.403 41.0985 113.997 40.2291C113.994 41.9218 113.741 43.7782 113.198 45.8068C112.718 47.598 112.011 49.4447 111.13 51.2761C110.491 49.9088 109.431 48.8445 108.157 48.5031C104.593 47.5482 101.327 49.8151 100.493 52.9277C99.4344 56.8781 100.949 60.347 104.217 61.4676Z" fill="#191847"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M45.8874 189.498L84.0895 321.14L102.058 419.978H120.093L102.09 189.498H45.8874Z" fill="#BA8B72"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M28.719 189.498C31.3846 257.885 30.3333 295.185 29.7367 301.399C29.1401 307.612 25.7532 349.224 2.67366 422.064H21.4315C51.9965 352.187 62.6665 310.574 66.1721 301.399C69.6776 292.223 80.0312 254.923 95.1469 189.498H28.719Z" fill="#D4A181"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M45.0673 189.498C55.0043 234.796 72.191 307.104 96.6274 406.42H123.005C124.954 304.481 116.666 237.388 102.313 189.498H45.0673Z" fill="#69A1AC"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M28.5857 189.498C31.1963 257.885 24.4307 325.259 3.47337 407.485H31.6172C62.2385 338.651 84.1857 271.609 99.1852 189.498H28.5857Z" fill="#89C5CC"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M0 435.622L1.03499 418.935C7.09473 420.708 14.6847 420.012 23.8048 416.849C33.6112 423.796 45.9562 428.539 60.8397 431.079C61.9752 431.273 62.7386 432.35 62.5449 433.486C62.5323 433.559 62.5158 433.632 62.4955 433.704L61.0646 438.75H23.8048H2.06999L0 435.622Z" fill="#191847"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M98.0322 435.622L99.0672 418.935C105.127 420.708 112.717 420.012 121.837 416.849C131.643 423.796 143.988 428.539 158.872 431.079C160.007 431.273 160.771 432.35 160.577 433.486C160.564 433.559 160.548 433.632 160.528 433.704L159.097 438.75H121.837H100.102L98.0322 435.622Z" fill="#191847"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M120.508 130.87L159.599 117.631C166.769 111.637 173.574 107.2 180.014 104.319C181.902 103.895 185.055 103.993 181.28 108.589C177.504 113.186 173.74 118.19 174.928 120.021C176.116 121.851 180.155 120.299 181.442 123.219C182.3 125.166 175.575 126.817 161.266 128.171L131.181 147.321L120.508 130.87ZM173.436 157.189L190.612 151.347C194.283 143.374 197.651 139.631 200.716 140.117C203.256 139.439 197.305 149.283 201.917 149.151C206.528 149.02 218.814 142.857 220.396 144.827C222.737 147.742 218.955 154.757 215.392 157.95C208.734 163.919 203.816 165.494 192.143 166.634C186.041 167.23 179.178 169.372 171.557 173.06L173.436 157.189Z" fill="#D4A181"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M103.914 123.46C116.423 125.529 133.539 125.828 153.294 117.683L157.528 134.473C143.129 144.475 124.135 151.429 109.143 148.349C97.328 145.922 93.792 130.49 103.914 123.46Z" fill="#2026A2"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M116.327 151.377C129 157.021 151.917 157.042 185.077 151.44C189.994 168.817 191.559 180.863 189.772 187.579C160.539 196.841 136.498 199.03 117.524 196.108C116.148 207.43 112.901 217.86 106.596 226.803C93.6334 245.187 41.7033 216.888 22.4978 217.269C17.5305 177.471 42.71 166.092 46.987 141.942C51.6709 115.494 80.089 78.5244 83.2139 79.0754L111.711 84.1003C109.722 104.579 113.71 128.237 116.327 151.377Z" fill="#1F28CF"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M895.738 166.49C900.346 161.081 903.464 154.453 902.943 147.025C901.442 125.625 871.651 130.333 865.857 141.134C860.062 151.935 860.75 179.333 868.24 181.263C871.226 182.033 877.589 180.147 884.065 176.244L880 205H904L895.738 166.49Z" fill="#915B3C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M897.582 171.308C900.594 157.906 909.175 148.771 907.865 142.782C906.991 138.789 904.662 136.305 900.879 135.332C898.922 127.416 892.61 124.048 881.944 125.23C865.945 127.004 856.181 133.648 860.398 148.268C864.274 148.268 868.954 146.866 875.424 149.268C877.478 150.03 878.946 152.393 879.83 156.358H882.754C885.592 151.653 888.391 149.924 891.149 151.171C893.908 152.418 894.535 155.447 893.03 160.259L894.471 171.308H897.582Z" fill="#191847"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M971 330H856C847.163 330 840 337.163 840 346V438C840 446.837 847.163 454 856 454H971C979.837 454 987 446.837 987 438V346C987 337.163 979.837 330 971 330ZM955 358C957.209 358 959 359.791 959 362V422C959 424.209 957.209 426 955 426H872C869.791 426 868 424.209 868 422V362C868 359.791 869.791 358 872 358H955Z" fill="#C5CFD6"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M740.841 449C760.557 424.924 773.897 407.075 780.862 395.454C792.787 375.555 802.547 357.848 805.627 351.084C812.972 334.955 788.718 327.403 783.229 334.926C774.921 346.312 757.178 382.143 730 442.417L740.841 449Z" fill="#B28B67"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M781.242 442L817.935 349.637C825.783 332.8 787.884 321.732 782.117 329.568C769.023 347.357 737.901 417.534 734 422.834L781.242 442Z" fill="#2F3676"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M878.967 423.477C871.819 413.051 845.821 377.974 831.661 363.461C827.592 359.291 823.621 355.288 819.866 351.557C808.704 340.47 786.476 359.106 797.618 369.205C825.365 394.355 865.849 428.307 869.231 431.334C873.972 435.577 883.459 430.029 878.967 423.477Z" fill="#915B3C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M877.295 418.767C879.758 420.794 881.359 422.45 882.101 423.734C883.002 425.296 884.058 427.725 885.267 431.021C883.456 432.067 867.174 441.467 836.422 459.222C832.73 455.759 832.155 453.07 834.696 451.157C837.238 449.243 839.335 447.629 840.988 446.315L857.848 423.087C858.172 422.64 858.798 422.54 859.244 422.865C859.252 422.87 859.26 422.876 859.267 422.882L862.77 425.579C865.984 425.299 868.382 424.702 869.965 423.788C871.251 423.045 872.727 421.501 874.393 419.154C875.033 418.253 876.281 418.041 877.182 418.681C877.221 418.708 877.259 418.737 877.295 418.767Z" fill="#E4E4E4"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M749.322 445.402C750.441 448.388 751 450.623 751 452.106C751 453.909 750.7 456.54 750.099 460C748.007 460 729.206 460 693.697 460C692.231 455.154 693.077 452.539 696.235 452.152C699.393 451.766 702.016 451.417 704.105 451.106L730.32 439.419C730.824 439.194 731.416 439.421 731.641 439.925C731.644 439.934 731.648 439.942 731.652 439.951L733.337 444.039C736.26 445.403 738.636 446.085 740.463 446.085C741.948 446.085 743.999 445.485 746.616 444.285C747.62 443.825 748.807 444.266 749.267 445.27C749.287 445.313 749.305 445.357 749.322 445.402Z" fill="#E4E4E4"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M831.138 354.25C861.635 349.282 882.062 345.884 892.419 344.058C921.943 338.852 930.552 322.965 925.462 288.302H871.066C863.867 290.381 833.79 303.237 780.832 326.872C771.304 331.602 773.079 345.548 774.82 350.142C774.891 350.329 790.954 377.853 823.008 432.713L867.506 404.365L831.054 357.59C830.092 355.651 830.12 354.538 831.138 354.25Z" fill="#5C63AB"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M827.219 275.211L795.32 298.635C786.669 300.97 779.441 303.874 773.636 307.349C772.265 308.598 770.608 311.128 776.295 310.691C781.981 310.254 787.982 310.049 788.767 311.989C789.551 313.929 786.11 316.248 787.696 318.865C788.754 320.61 793.749 316.235 802.683 305.741L834.27 292.642L827.219 275.211ZM949.692 276.02L928.795 276.102C941.698 317.756 948.664 339.857 949.692 342.406C952.006 348.14 947.109 356.874 945.015 361.567C951.835 364.619 951.109 353.317 959.712 357.319C967.565 360.973 973.538 367.592 982.611 361.994C983.726 361.306 984.949 358.715 981.995 356.69C974.638 351.645 964.035 342.815 962.602 339.908C960.648 335.945 956.345 314.649 949.692 276.02Z" fill="#915B3C"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M890.305 188.332L881.658 186.849C849.575 214.564 836.397 267.809 797.07 296.015L806.536 307.748C874.76 299.3 891.67 234.355 890.305 188.332Z" fill="#E87613"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M928 297C893.328 297 867.824 297 851.489 297C847.992 297 848.651 291.952 849.157 289.404C854.989 260.004 877.759 228.312 877.759 186.461L899.828 183C918.083 212.358 924.395 248.505 928 297Z" fill="#DDE3E9"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M927.385 211.858C930.59 210.937 933.129 208.788 935 205.411C943.066 190.856 940.153 182.842 931.533 180.208C922.912 177.574 915.225 183 901.49 183C900.743 183 900.059 183.047 899.437 183.14L892.528 183.535C872.706 250.715 867.239 295.537 876.128 318H936.348C939.916 326.32 943.33 333.32 946.591 339H963C964.544 289.067 952.673 246.686 927.385 211.858Z" fill="#FF9B21"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M923.235 283.498C921.341 299.344 918.263 310.845 914 318H936.348C932.186 308.295 927.815 296.794 923.235 283.498Z" fill="black" fill-opacity="0.1"/>
<path d="M260.432 237.182C260.261 235.742 259.57 234.625 258.358 233.83C257.146 233.034 255.659 232.636 253.898 232.636C252.61 232.636 251.483 232.845 250.517 233.261C249.561 233.678 248.813 234.251 248.273 234.98C247.742 235.709 247.477 236.538 247.477 237.466C247.477 238.242 247.662 238.91 248.031 239.469C248.41 240.018 248.893 240.477 249.48 240.847C250.067 241.206 250.683 241.505 251.327 241.741C251.971 241.969 252.562 242.153 253.102 242.295L256.057 243.091C256.814 243.29 257.657 243.564 258.585 243.915C259.523 244.265 260.418 244.743 261.27 245.349C262.132 245.946 262.842 246.713 263.401 247.651C263.959 248.588 264.239 249.739 264.239 251.102C264.239 252.674 263.827 254.095 263.003 255.364C262.188 256.633 260.995 257.641 259.423 258.389C257.861 259.137 255.962 259.511 253.727 259.511C251.644 259.511 249.84 259.175 248.315 258.503C246.8 257.83 245.607 256.893 244.736 255.69C243.874 254.488 243.386 253.091 243.273 251.5H246.909C247.004 252.598 247.373 253.508 248.017 254.227C248.67 254.937 249.494 255.468 250.489 255.818C251.492 256.159 252.572 256.33 253.727 256.33C255.072 256.33 256.279 256.112 257.349 255.676C258.42 255.231 259.267 254.616 259.892 253.83C260.517 253.034 260.83 252.106 260.83 251.045C260.83 250.08 260.56 249.294 260.02 248.688C259.48 248.081 258.77 247.589 257.889 247.21C257.009 246.831 256.057 246.5 255.034 246.216L251.455 245.193C249.182 244.54 247.383 243.607 246.057 242.395C244.731 241.183 244.068 239.597 244.068 237.636C244.068 236.008 244.509 234.587 245.389 233.375C246.279 232.153 247.473 231.206 248.969 230.534C250.474 229.852 252.155 229.511 254.011 229.511C255.886 229.511 257.553 229.848 259.011 230.52C260.47 231.183 261.625 232.092 262.477 233.247C263.339 234.402 263.794 235.714 263.841 237.182H260.432ZM270.031 259V229.909H273.553V242.864H289.065V229.909H292.587V259H289.065V245.989H273.553V259H270.031ZM324.185 244.455C324.185 247.523 323.631 250.174 322.523 252.409C321.415 254.644 319.896 256.367 317.964 257.58C316.032 258.792 313.826 259.398 311.344 259.398C308.863 259.398 306.657 258.792 304.725 257.58C302.793 256.367 301.273 254.644 300.165 252.409C299.058 250.174 298.504 247.523 298.504 244.455C298.504 241.386 299.058 238.735 300.165 236.5C301.273 234.265 302.793 232.542 304.725 231.33C306.657 230.117 308.863 229.511 311.344 229.511C313.826 229.511 316.032 230.117 317.964 231.33C319.896 232.542 321.415 234.265 322.523 236.5C323.631 238.735 324.185 241.386 324.185 244.455ZM320.776 244.455C320.776 241.936 320.355 239.81 319.512 238.077C318.679 236.344 317.547 235.032 316.117 234.142C314.697 233.252 313.106 232.807 311.344 232.807C309.583 232.807 307.987 233.252 306.558 234.142C305.137 235.032 304.005 236.344 303.163 238.077C302.329 239.81 301.913 241.936 301.913 244.455C301.913 246.973 302.329 249.099 303.163 250.832C304.005 252.565 305.137 253.877 306.558 254.767C307.987 255.657 309.583 256.102 311.344 256.102C313.106 256.102 314.697 255.657 316.117 254.767C317.547 253.877 318.679 252.565 319.512 250.832C320.355 249.099 320.776 246.973 320.776 244.455ZM330.109 259V229.909H339.938C342.22 229.909 344.086 230.321 345.535 231.145C346.993 231.959 348.073 233.062 348.773 234.455C349.474 235.847 349.825 237.4 349.825 239.114C349.825 240.828 349.474 242.385 348.773 243.787C348.082 245.188 347.012 246.306 345.563 247.139C344.114 247.963 342.258 248.375 339.995 248.375H332.95V245.25H339.881C341.444 245.25 342.699 244.98 343.646 244.44C344.593 243.901 345.279 243.171 345.705 242.253C346.141 241.325 346.359 240.278 346.359 239.114C346.359 237.949 346.141 236.907 345.705 235.989C345.279 235.07 344.588 234.35 343.631 233.83C342.675 233.299 341.406 233.034 339.825 233.034H333.631V259H330.109ZM355.499 259V229.909H365.329C367.611 229.909 369.477 230.321 370.925 231.145C372.384 231.959 373.463 233.062 374.164 234.455C374.865 235.847 375.215 237.4 375.215 239.114C375.215 240.828 374.865 242.385 374.164 243.787C373.473 245.188 372.403 246.306 370.954 247.139C369.505 247.963 367.649 248.375 365.386 248.375H358.34V245.25H365.272C366.835 245.25 368.089 244.98 369.036 244.44C369.983 243.901 370.67 243.171 371.096 242.253C371.531 241.325 371.749 240.278 371.749 239.114C371.749 237.949 371.531 236.907 371.096 235.989C370.67 235.07 369.978 234.35 369.022 233.83C368.066 233.299 366.797 233.034 365.215 233.034H359.022V259H355.499ZM384.413 229.909V259H380.89V229.909H384.413ZM414.544 229.909V259H411.135L395.283 236.159H394.999V259H391.476V229.909H394.885L410.794 252.807H411.078V229.909H414.544ZM441.479 239C441.167 238.044 440.755 237.187 440.244 236.429C439.742 235.662 439.14 235.009 438.44 234.469C437.748 233.929 436.962 233.517 436.082 233.233C435.201 232.949 434.235 232.807 433.184 232.807C431.46 232.807 429.893 233.252 428.482 234.142C427.071 235.032 425.949 236.344 425.116 238.077C424.282 239.81 423.866 241.936 423.866 244.455C423.866 246.973 424.287 249.099 425.13 250.832C425.973 252.565 427.114 253.877 428.553 254.767C429.993 255.657 431.612 256.102 433.411 256.102C435.078 256.102 436.546 255.747 437.815 255.037C439.093 254.317 440.087 253.304 440.798 251.997C441.517 250.681 441.877 249.133 441.877 247.352L442.957 247.58H434.207V244.455H445.286V247.58C445.286 249.975 444.775 252.059 443.752 253.83C442.739 255.6 441.337 256.973 439.548 257.949C437.767 258.915 435.722 259.398 433.411 259.398C430.835 259.398 428.572 258.792 426.621 257.58C424.68 256.367 423.165 254.644 422.076 252.409C420.996 250.174 420.457 247.523 420.457 244.455C420.457 242.153 420.764 240.084 421.38 238.247C422.005 236.401 422.886 234.829 424.022 233.531C425.158 232.234 426.503 231.24 428.056 230.548C429.609 229.857 431.318 229.511 433.184 229.511C434.718 229.511 436.148 229.743 437.474 230.207C438.809 230.662 439.997 231.311 441.039 232.153C442.09 232.987 442.966 233.986 443.667 235.151C444.368 236.306 444.851 237.589 445.116 239H441.479ZM462.57 229.909H466.774L476.661 254.057H477.001L486.888 229.909H491.092V259H487.797V236.898H487.513L478.422 259H475.24L466.149 236.898H465.865V259H462.57V229.909ZM499.349 259H495.656L506.337 229.909H509.974L520.656 259H516.962L508.269 234.511H508.042L499.349 259ZM500.712 247.636H515.599V250.761H500.712V247.636ZM534.164 259H525.187V229.909H534.562C537.384 229.909 539.799 230.491 541.806 231.656C543.814 232.812 545.353 234.473 546.423 236.642C547.493 238.801 548.028 241.386 548.028 244.398C548.028 247.428 547.488 250.037 546.408 252.224C545.329 254.402 543.757 256.079 541.692 257.253C539.628 258.418 537.119 259 534.164 259ZM528.71 255.875H533.937C536.342 255.875 538.335 255.411 539.917 254.483C541.498 253.555 542.677 252.234 543.454 250.52C544.23 248.806 544.619 246.765 544.619 244.398C544.619 242.049 544.235 240.027 543.468 238.332C542.701 236.628 541.555 235.321 540.031 234.412C538.506 233.493 536.607 233.034 534.335 233.034H528.71V255.875ZM553.937 259V229.909H571.494V233.034H557.46V242.864H570.585V245.989H557.46V255.875H571.721V259H553.937ZM589.093 259V229.909H606.65V233.034H592.616V242.864H605.741V245.989H592.616V255.875H606.877V259H589.093ZM614.192 259H610.499L621.181 229.909H624.817L635.499 259H631.806L623.113 234.511H622.886L614.192 259ZM615.556 247.636H630.442V250.761H615.556V247.636ZM655.94 237.182C655.769 235.742 655.078 234.625 653.866 233.83C652.654 233.034 651.167 232.636 649.406 232.636C648.118 232.636 646.991 232.845 646.025 233.261C645.068 233.678 644.32 234.251 643.781 234.98C643.25 235.709 642.985 236.538 642.985 237.466C642.985 238.242 643.17 238.91 643.539 239.469C643.918 240.018 644.401 240.477 644.988 240.847C645.575 241.206 646.191 241.505 646.835 241.741C647.478 241.969 648.07 242.153 648.61 242.295L651.565 243.091C652.322 243.29 653.165 243.564 654.093 243.915C655.031 244.265 655.925 244.743 656.778 245.349C657.639 245.946 658.35 246.713 658.908 247.651C659.467 248.588 659.746 249.739 659.746 251.102C659.746 252.674 659.335 254.095 658.511 255.364C657.696 256.633 656.503 257.641 654.931 258.389C653.369 259.137 651.47 259.511 649.235 259.511C647.152 259.511 645.348 259.175 643.823 258.503C642.308 257.83 641.115 256.893 640.244 255.69C639.382 254.488 638.894 253.091 638.781 251.5H642.417C642.512 252.598 642.881 253.508 643.525 254.227C644.178 254.937 645.002 255.468 645.996 255.818C647 256.159 648.08 256.33 649.235 256.33C650.58 256.33 651.787 256.112 652.857 255.676C653.927 255.231 654.775 254.616 655.4 253.83C656.025 253.034 656.337 252.106 656.337 251.045C656.337 250.08 656.067 249.294 655.528 248.688C654.988 248.081 654.278 247.589 653.397 247.21C652.516 246.831 651.565 246.5 650.542 246.216L646.962 245.193C644.69 244.54 642.89 243.607 641.565 242.395C640.239 241.183 639.576 239.597 639.576 237.636C639.576 236.008 640.016 234.587 640.897 233.375C641.787 232.153 642.98 231.206 644.477 230.534C645.982 229.852 647.663 229.511 649.519 229.511C651.394 229.511 653.061 229.848 654.519 230.52C655.978 231.183 657.133 232.092 657.985 233.247C658.847 234.402 659.301 235.714 659.349 237.182H655.94ZM669.061 229.909V259H665.538V229.909H669.061ZM676.124 259V229.909H693.681V233.034H679.647V242.864H692.772V245.989H679.647V255.875H693.908V259H676.124ZM700.031 259V229.909H709.86C712.133 229.909 713.998 230.297 715.457 231.074C716.915 231.841 717.995 232.897 718.695 234.241C719.396 235.586 719.746 237.116 719.746 238.83C719.746 240.544 719.396 242.063 718.695 243.389C717.995 244.715 716.92 245.757 715.471 246.514C714.022 247.262 712.171 247.636 709.917 247.636H701.962V244.455H709.803C711.356 244.455 712.606 244.227 713.553 243.773C714.51 243.318 715.201 242.674 715.627 241.841C716.063 240.998 716.281 239.994 716.281 238.83C716.281 237.665 716.063 236.647 715.627 235.776C715.192 234.904 714.496 234.232 713.539 233.759C712.583 233.276 711.318 233.034 709.746 233.034H703.553V259H700.031ZM713.724 245.932L720.883 259H716.792L709.746 245.932H713.724Z" fill="#333333"/>
</svg>
"""
# components.html(svg_code, height=500, width=650)
# Add CSS to center the SVG image
centered_svg_code = f"""
<style>
.centered-svg {{
    display: flex;
    justify-content: center;
    align-items: center;
    height: 300;
    padding: 10px;
}}
</style>
<div class="centered-svg">{svg_code}</div>
"""

# Use st.markdown to display the centered SVG image
st.markdown(centered_svg_code, unsafe_allow_html=True)
# from link_button import link_button

# Hide Footer in Streamlit
hide_menu_style = """
        <style>
        footer {visibility: hidden;}
        </style>
        """
st.markdown(hide_menu_style, unsafe_allow_html=True)

if 'dataframe' not in st.session_state:
    st.session_state.dataframe = None


def highlight_row(dataframe):
    # copy df to new - original data are not changed
    df = dataframe.copy()
    df['Price'] = pd.to_numeric(df['Price'], errors='coerce')
    minimumPrice = df['Price'].min()
    # set by condition
    mask = df['Price'] == minimumPrice
    df.loc[mask, :] = 'background-color: lightgreen'
    df.loc[~mask, :] = 'background-color: #DFFFFA'
    return df

# Display Image
# st.image("assets/ShopSync_p.png")


st.write("ShopSync is a versatile platform comprising an Android application, a user-friendly website, and a command line tool. It adeptly scours the leading e-commerce websites, extracting optimal deals for the searched items across this diverse range of platforms.")
product = st.text_input('Enter the product item name')
website = st.selectbox('Select the website', ('All', 'Walmart',
                       'Amazon', 'Ebay', 'BestBuy', 'Target', 'Costco', 'All'))

website_dict = {
    'Walmart': 'wm',
    'Amazon': 'az',
    'Ebay': 'eb',
    'BestBuy': 'bb',
    'Target': 'tg',
    'Costco': 'cc',
    'All': 'all'
}
# Pass product and website to method
if st.button('Search') and product and website:
    rakuten_discount = rakuten()
    company_list = conf.getCompanies()
    results = search_items_API(website_dict[website], product)
    # Use st.columns based on return values
    description = []
    url = []
    price = []
    site = []
    rakuten = []

    if results is not None and isinstance(results, list):
        for result in results:
            if result != {} and result['price'] != '':
                description.append(result['title'])
                url.append(result['link'])
                price_str = result['price']
                match = re.search(r'\d+(\.\d{1,2})?', price_str)
            if match:
                price_str = match.group(0)
                price_f = float(price_str)
                price.append(price_f)
            else:
                print("Unable to extract a valid price from the string")
            site.append(result['website'])

    for i in range(len(site)):
        k = company_list.index(site[i])
        rakuten.append(str(rakuten_discount[k]) + "%")

    if len(price):

        dataframe = pd.DataFrame(
            {'Description': description, 'Price': price, 'Link': url, 'Website': site, 'Rakuten': rakuten})
        dataframe['Description'] = dataframe['Description'].apply(
            split_description)
        dataframe['Product'] = dataframe['Description'].str.split(
        ).str[:3].str.join(' ')
        dataframe['Product'] = dataframe['Product'].str.replace(
            '[,"]', '', regex=True)
        product_column = dataframe.pop('Product')
        dataframe.insert(0, 'Product', product_column)

        dataframe['Price'] = dataframe['Price'].apply(
            lambda x: float(f'{x:.2f}'))
        dataframe = dataframe.sort_values(by='Price', ascending=True)
        dataframe = dataframe.reset_index(drop=True)
        dataframe['Price'] = [f'{x:.2f}' for x in dataframe['Price']]

        def add_http_if_not_present(url):
            if url.startswith('http://') or url.startswith('https://'):
                return url
            else:
                return 'https://' + url
        dataframe['Link'] = dataframe['Link'].apply(add_http_if_not_present)

        st.cache(dataframe)
        st.success("Data successfully scraped and cached.")

        st.balloons()
        st.session_state.dataframe = dataframe

    else:
        st.error('Sorry!, there is no other website with same product')

if 'dataframe' in st.session_state and isinstance(st.session_state.dataframe, pd.DataFrame):

    st.markdown("<h1 style='text-align: center; color: #1DC5A9;'>RESULT</h1>",
                unsafe_allow_html=True)

    st.session_state.dataframe['Price'] = pd.to_numeric(
        st.session_state.dataframe['Price'], errors='coerce')
    price_range = st.slider("Price Range", min_value=st.session_state.dataframe['Price'].min(), max_value=st.session_state.dataframe['Price'].max(
    ), value=(st.session_state.dataframe['Price'].min(), st.session_state.dataframe['Price'].max()))

    filtered_df = st.session_state.dataframe[(st.session_state.dataframe["Price"] >= price_range[0]) & (
        st.session_state.dataframe["Price"] <= price_range[1])]
    st.dataframe(filtered_df.style.apply(highlight_row, axis=None), column_config={
                 "Link": st.column_config.LinkColumn("URL to website")},)

st.write('<span style="font-size: 24px;">Add for favorites</span>',
         unsafe_allow_html=True)

if st.session_state.dataframe is not None:
    selected_index = st.selectbox("Select an index to get the corresponding row:", [
                                  None] + list(range(len(st.session_state.dataframe))))

    if selected_index is not None:
        fav = pd.DataFrame([st.session_state.dataframe.iloc[selected_index]])
        if 'fav' in st.session_state:
            st.session_state.fav = pd.concat(
                [st.session_state.fav, fav], axis=0).drop_duplicates()
            st.dataframe(st.session_state.fav.style, column_config={"Link": st.column_config.LinkColumn(
                "URL to website"), "Button": st.column_config.LinkColumn("Add to fav")},)

        else:
            st.session_state.fav = fav.copy()
            st.dataframe(fav.style, column_config={"Link": st.column_config.LinkColumn(
                "URL to website"), "Button": st.column_config.LinkColumn("Add to fav")},)


# Add footer to UI
footer = """<style>
a:link , a:visited{
color: blue;
background-color: transparent;
text-decoration: underline;
}

a:hover,  a:active {
color: red;
background-color: transparent;
text-decoration: underline;
}

.footer {
position: fixed;
left: 0;
bottom: 0%;
width: 100%;
background-color: #DFFFFA;
color: black;
text-align: center;
}
</style>
<div class="footer">
<p>Developed with ❤ by <a style='display: block; text-align: center;' href="https://github.com/Neel317/ShopSync" target="_blank">ShopSync</a></p>
<p><a style='display: block; text-align: center;' href="https://github.com/Kashika08/CSC510_ShopSync_Group40/blob/main/LICENSE" target="_blank">MIT License Copyright (c) 2023</a></p>
<p>Contributors: Neel, Shubh, Tanay, Tanishq</p>
</div>
"""
st.markdown(footer, unsafe_allow_html=True)
